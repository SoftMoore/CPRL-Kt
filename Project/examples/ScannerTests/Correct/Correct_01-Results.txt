initializing...

starting main loop...

line:  2   char:  1   token: Reserved Word -> and
line:  2   char: 11   token: Reserved Word -> array
line:  2   char: 21   token: Reserved Word -> begin
line:  2   char: 31   token: Reserved Word -> Boolean
line:  2   char: 41   token: Reserved Word -> Char
line:  3   char:  1   token: Reserved Word -> class
line:  3   char: 11   token: Reserved Word -> const
line:  3   char: 21   token: Reserved Word -> declare
line:  3   char: 31   token: Reserved Word -> else
line:  3   char: 41   token: Reserved Word -> elsif
line:  4   char:  1   token: Reserved Word -> end
line:  4   char: 11   token: Reserved Word -> exit
line:  4   char: 21   token: Reserved Word -> false
line:  4   char: 31   token: Reserved Word -> for
line:  4   char: 41   token: Reserved Word -> function
line:  5   char:  1   token: Reserved Word -> if
line:  5   char: 11   token: Reserved Word -> in
line:  5   char: 21   token: Reserved Word -> is
line:  5   char: 31   token: Reserved Word -> Integer
line:  5   char: 41   token: Reserved Word -> loop
line:  6   char:  1   token: Reserved Word -> mod
line:  6   char: 11   token: Reserved Word -> not
line:  6   char: 21   token: Reserved Word -> of
line:  6   char: 31   token: Reserved Word -> or
line:  6   char: 41   token: Reserved Word -> private
line:  7   char:  1   token: Reserved Word -> procedure
line:  7   char: 11   token: Reserved Word -> program
line:  7   char: 21   token: Reserved Word -> protected
line:  7   char: 31   token: Reserved Word -> public
line:  7   char: 41   token: Reserved Word -> read
line:  8   char:  1   token: Reserved Word -> readln
line:  8   char: 11   token: Reserved Word -> return
line:  8   char: 21   token: Reserved Word -> String
line:  8   char: 31   token: Reserved Word -> then
line:  8   char: 41   token: Reserved Word -> true
line:  9   char:  1   token: Reserved Word -> type
line:  9   char: 11   token: Reserved Word -> var
line:  9   char: 21   token: Reserved Word -> when
line:  9   char: 31   token: Reserved Word -> while
line:  9   char: 41   token: Reserved Word -> write
line: 10   char:  1   token: Reserved Word -> writeln
line: 13   char:  1   token: +
line: 13   char:  6   token: -
line: 13   char: 11   token: *
line: 13   char: 16   token: /
line: 16   char:  1   token: =
line: 16   char:  5   token: !=
line: 16   char: 10   token: <
line: 16   char: 14   token: <=
line: 16   char: 19   token: >
line: 16   char: 23   token: >=
line: 19   char:  1   token: :=
line: 19   char:  6   token: (
line: 19   char: 10   token: )
line: 19   char: 14   token: [
line: 19   char: 18   token: ]
line: 19   char: 22   token: ,
line: 19   char: 26   token: :
line: 19   char: 30   token: ;
line: 19   char: 34   token: .
line: 22   char:  1   token: Identifier -> x
line: 22   char:  5   token: Identifier -> y
line: 22   char:  9   token: Identifier -> x1
line: 22   char: 14   token: Identifier -> i
line: 22   char: 18   token: Identifier -> aVeryLongIdentifier
line: 25   char:  1   token: Identifier -> IF
line: 25   char:  6   token: Identifier -> While
line: 25   char: 14   token: Identifier -> LOOP
line: 25   char: 21   token: Identifier -> End
line: 25   char: 27   token: Identifier -> Array
line: 25   char: 35   token: Identifier -> TYPE
line: 28   char:  1   token: Integer Literal -> 1
line: 28   char:  5   token: Integer Literal -> 0
line: 28   char:  9   token: Integer Literal -> 10
line: 28   char: 13   token: Integer Literal -> 123456789
line: 29   char:  1   token: Character Literal -> 'a'
line: 29   char:  7   token: Character Literal -> 'x'
line: 29   char: 13   token: Character Literal -> '\"'
line: 29   char: 20   token: Character Literal -> '\''
line: 30   char:  1   token: String Literal -> "a"
line: 30   char:  7   token: String Literal -> "a longer string"
line: 30   char: 27   token: String Literal -> "yet a longer string with a quote (\") in the middle"
line: 33   char:  1   token: End-of-File

...done
